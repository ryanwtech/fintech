version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: fintech-postgres
    environment:
      POSTGRES_DB: fintech_db
      POSTGRES_USER: fintech_user
      POSTGRES_PASSWORD: fintech_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./src/main/resources/db/migration:/docker-entrypoint-initdb.d
    networks:
      - fintech-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U fintech_user -d fintech_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: .
    container_name: fintech-backend
    environment:
      SPRING_PROFILES_ACTIVE: docker
      DATABASE_URL: jdbc:postgresql://postgres:5432/fintech_db
      DATABASE_USERNAME: fintech_user
      DATABASE_PASSWORD: fintech_password
      JWT_SECRET: mySecretKey
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - fintech-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Optional: pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: fintech-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@fintech.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - fintech-network
    volumes:
      - pgadmin_data:/var/lib/pgadmin

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  fintech-network:
    driver: bridge
